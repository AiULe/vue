{"remainingRequest":"/Users/pro/vue/mufeng0712/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/pro/vue/mufeng0712/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pro/vue/mufeng0712/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pro/vue/mufeng0712/src/pages/index.vue?vue&type=template&id=57509004&","dependencies":[{"path":"/Users/pro/vue/mufeng0712/src/pages/index.vue","mtime":1594523468000},{"path":"/Users/pro/vue/mufeng0712/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pro/vue/mufeng0712/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/pro/vue/mufeng0712/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pro/vue/mufeng0712/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}