{"remainingRequest":"/Users/pro/vue/vuelazy0720/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/pro/vue/vuelazy0720/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pro/vue/vuelazy0720/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pro/vue/vuelazy0720/src/components/NavHeader.vue?vue&type=template&id=6e1afce0&","dependencies":[{"path":"/Users/pro/vue/vuelazy0720/src/components/NavHeader.vue","mtime":1595237646393},{"path":"/Users/pro/vue/vuelazy0720/node_modules/cache-loader/dist/cjs.js","mtime":1595050656128},{"path":"/Users/pro/vue/vuelazy0720/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1595050659767},{"path":"/Users/pro/vue/vuelazy0720/node_modules/cache-loader/dist/cjs.js","mtime":1595050656128},{"path":"/Users/pro/vue/vuelazy0720/node_modules/vue-loader/lib/index.js","mtime":1595050659767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}